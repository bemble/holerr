# TODO: test on arm (raspberry pi)
# TODO: split built to mutualise front when multiple platforms
# TODO: sync readme to docker hub
name: docker-image

on:
  push:
    branches:
      - "main"
  release:
    types: [published]

jobs:
  build:
    name: Build container
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ github.repository_owner }}
          password: ${{ secrets.HUB_TOKEN }}

      - name: Log in to ghcr.io
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Compute app environment and docker tags
        id: compute-vars
        run: |
          if [[ "${{ github.event_name }}" == "release" ]]; then
            echo "::set-output name=app-version::${{ github.event.release.tag_name }}"
            echo "::set-output name=docker-tag1::latest"
            echo "::set-output name=docker-tag2::${{ github.event.release.tag_name }}"
          else
            echo "::set-output name=app-version::${{ github.sha }}"
            echo "::set-output name=docker-tag1::develop"
            echo "::set-output name=docker-tag2::${{ github.sha }}"
          fi

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: linux/amd64
          #platforms: linux/amd64,linux/arm/v6,linux/arm/v7
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}:${{ steps.compute-vars.outputs.docker-tag1 }}
            ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}:${{ steps.compute-vars.outputs.docker-tag2 }}
            ${{ github.repository_owner }}/${{ github.event.repository.name }}:${{ steps.compute-vars.outputs.docker-tag1 }}
            ${{ github.repository_owner }}/${{ github.event.repository.name }}:${{ steps.compute-vars.outputs.docker-tag2 }}
          build-args: |
            APP_VERSION=${{ steps.compute-vars.outputs.app-version }}

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

  sync-description:
    name: Docker Hhub - Sync description
    needs: build
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install deps
        run: |
          curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null
          sudo apt update
          sudo apt install oathtool jq gh

      - name: Sync repository -> Docker Hub
        run: |
          ##########################
          # Retrieve info to sync
          ##########################
          description=$(gh repo view ${{ github.repository_owner }}/${{ github.event.repository.name }} --json description | jq -r '.description')
          full_description=$(cat README.md | sed -e 's/ghcr.io\///g')

          ##########################
          # Hub login
          ##########################
          hubToken=$(curl -s --request POST 'https://hub.docker.com/v2/users/login' \
              --header 'Content-Type: application/json' \
              --data-raw '{
                  "username": "'${HUB_USERNAME}'",
                  "password": "'${HUB_PASSWORD}'"
              }' | jq -r '.token')

          # 2FA
          if [[ "${HUB_TOTP_SECRET}" != "" ]]; then
            totpCode=$(oathtool --base32 --totp ${HUB_TOTP_SECRET})
            hubToken=$(curl -s --request POST 'https://hub.docker.com/v2/users/2fa-login' \
                --header 'Content-Type: application/json' \
                --data-raw '{
                    "login_2fa_token": "'${hubToken}'",
                    "code": "'${totpCode}'"
                }' | jq -r '.token')
          fi

          ##########################
          # Sync itself
          ##########################
          jq -nM --arg d "${description}" --arg fd "${full_description}" '{full_description: $fd, description: $d}' > hub_tmp_body.json
          curl -s --request PATCH 'https://hub.docker.com/v2/repositories/bemble/holerr/' \
              --header 'Authorization: Bearer '${hubToken} \
              --header 'Content-Type: application/json' \
              --data "@hub_tmp_body.json"  > /dev/null
          rm hub_tmp_body.json
        env:
          HUB_USERNAME: ${{ github.repository_owner }}
          HUB_PASSWORD: ${{ secrets.HUB_TOKEN }}
          HUB_TOTP_SECRET: ${{ secrets.HUB_TOTP_SECRET }}
